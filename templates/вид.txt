<!DOCTYPE html>
<html lang="uk">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Тестування продавців-консультантів</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f5f5f5;
            color: #333;
        }
        h1 {
            color: #2c3e50;
            text-align: center;
            margin-bottom: 30px;
        }
        .chat-container {
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            padding: 20px;
            height: 500px;
            overflow-y: auto;
            margin-bottom: 20px;
        }
        .message {
            margin-bottom: 15px;
            padding: 10px 15px;
            border-radius: 18px;
            max-width: 80%;
            line-height: 1.4;
        }
        .bot-message {
            background-color: #e3f2fd;
            align-self: flex-start;
            border-bottom-left-radius: 5px;
        }
        .user-message {
            background-color: #007bff;
            color: white;
            align-self: flex-end;
            border-bottom-right-radius: 5px;
            margin-left: auto;
        }
        .input-area {
            display: flex;
            gap: 10px;
        }
        #user-input {
            flex-grow: 1;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 20px;
            font-size: 16px;
        }
        #send-button {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 0 20px;
            border-radius: 20px;
            cursor: pointer;
            font-size: 16px;
        }
        #send-button:hover {
            background-color: #0056b3;
        }
        #send-button:disabled {
            background-color: #cccccc;
            cursor: not-allowed;
        }
        .status {
            text-align: center;
            margin-top: 10px;
            font-style: italic;
            color: #666;
        }
        .typing-indicator {
            display: inline-block;
            padding: 10px;
        }
        .typing-dot {
            display: inline-block;
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background-color: #999;
            margin: 0 2px;
            animation: typingAnimation 1.4s infinite ease-in-out;
        }
        .typing-dot:nth-child(1) { animation-delay: 0s; }
        .typing-dot:nth-child(2) { animation-delay: 0.2s; }
        .typing-dot:nth-child(3) { animation-delay: 0.4s; }
        @keyframes typingAnimation {
            0%, 60%, 100% { transform: translateY(0); }
            30% { transform: translateY(-5px); }
        }
        #restart-button {
            display: none;
            margin: 15px auto;
            padding: 10px 20px;
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 20px;
            font-size: 16px;
            cursor: pointer;
        }
        #restart-button:hover {
            background-color: #218838;
        }
        /* Стилі для кнопок вибору моделей */
        #models-container {
            display: none;
            margin-top: 15px;
            text-align: center;
        }
        #models-buttons {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            justify-content: center;
            margin-top: 10px;
        }
        .model-button {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.3s;
        }
        .model-button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <h1>Тестування навичок продавця-консультанта</h1>
    
    <div class="chat-container" id="chat-container">
        <!-- Чат буде додаватись сюди -->
    </div>
    
    <div class="input-area">
        <input type="text" id="user-input" placeholder="Напишіть ваше повідомлення..." autocomplete="off">
        <button id="send-button">Надіслати</button>
    </div>
    
    <!-- Контейнер для вибору моделей -->
    <div id="models-container">
        <p id="models-prompt"></p>
        <div id="models-buttons">
            <!-- Кнопки моделей будуть додані динамічно -->
        </div>
    </div>
    
    <div class="status" id="status"></div>

    <div style="text-align: center;">
        <button id="restart-button">Почати новий діалог</button>
    </div>
    
    <script>
        const chatContainer = document.getElementById('chat-container');
        const userInput = document.getElementById('user-input');
        const sendButton = document.getElementById('send-button');
        const statusElement = document.getElementById('status');
        const restartButton = document.getElementById('restart-button');
        const modelsContainer = document.getElementById('models-container');
        const modelsButtons = document.getElementById('models-buttons');
        const modelsPrompt = document.getElementById('models-prompt');

        function addMessage(text, isUser) {
            const messageDiv = document.createElement('div');
            messageDiv.classList.add('message');
            messageDiv.classList.add(isUser ? 'user-message' : 'bot-message');
            messageDiv.textContent = text;
            chatContainer.appendChild(messageDiv);
            chatContainer.scrollTop = chatContainer.scrollHeight;
        }

        function showTypingIndicator() {
            const typingDiv = document.createElement('div');
            typingDiv.classList.add('typing-indicator');
            typingDiv.id = 'typing-indicator';
            typingDiv.innerHTML = `
                <div class="typing-dot"></div>
                <div class="typing-dot"></div>
                <div class="typing-dot"></div>
            `;
            chatContainer.appendChild(typingDiv);
            chatContainer.scrollTop = chatContainer.scrollHeight;
        }

        function hideTypingIndicator() {
            const typingIndicator = document.getElementById('typing-indicator');
            if (typingIndicator) {
                typingIndicator.remove();
            }
        }

        function disableChat() {
            userInput.disabled = true;
            sendButton.disabled = true;
            statusElement.textContent = "Чат завершено.";
            showRestartButton();
        }

        function showRestartButton() {
            restartButton.style.display = 'inline-block';
            restartButton.addEventListener('click', () => {
                window.location.reload();
            });
        }

        function showModelButtons(models, promptText) {
            modelsPrompt.textContent = promptText;
            modelsButtons.innerHTML = '';
            
            models.forEach(model => {
                const button = document.createElement('button');
                button.textContent = model;
                button.className = 'model-button';
                button.onclick = function() {
                    sendModelChoice(model);
                };
                modelsButtons.appendChild(button);
            });
            
            modelsContainer.style.display = 'block';
            userInput.style.display = 'none';
        }

        function hideModelButtons() {
            modelsContainer.style.display = 'none';
            userInput.style.display = 'block';
        }

        async function sendModelChoice(model) {
            addMessage(model, true);
            hideModelButtons();
            
            showTypingIndicator();
            statusElement.textContent = "Бот обробляє ваш вибір...";
            
            try {
                const response = await fetch('/chat', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ message: model })
                });
                
                const data = await response.json();
                
                if (data.error) {
                    statusElement.textContent = "Помилка: " + data.error;
                    if (data.chat_ended) {
                        disableChat();
                    }
                } else {
                    addMessage(data.reply, false);
                    statusElement.textContent = "";
                    
                    if (data.chat_ended) {
                        disableChat();
                    }
                }
            } catch (error) {
                statusElement.textContent = "Помилка з'єднання: " + error.message;
            } finally {
                hideTypingIndicator();
            }
        }

        async function sendMessage() {
            const message = userInput.value.trim();
            if (!message) return;
            
            addMessage(message, true);
            userInput.value = '';
            
            showTypingIndicator();
            statusElement.textContent = "Бот обдумує відповідь...";
            
            try {
                const response = await fetch('/chat', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ message: message })
                });
                
                const data = await response.json();
                
                if (data.error) {
                    statusElement.textContent = "Помилка: " + data.error;
                    if (data.chat_ended) {
                        disableChat();
                    }
                } else {
                    addMessage(data.reply, false);
                    statusElement.textContent = "";
                    
                    if (data.show_models) {
                        showModelButtons(data.models, data.reply);
                    }
                    
                    if (data.chat_ended) {
                        disableChat();
                    }
                }
            } catch (error) {
                statusElement.textContent = "Помилка з'єднання: " + error.message;
            } finally {
                hideTypingIndicator();
            }
        }

        sendButton.addEventListener('click', sendMessage);
        userInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                sendMessage();
            }
        });

        window.addEventListener('DOMContentLoaded', async () => {
            showTypingIndicator();
            try {
                const response = await fetch('/start_chat', {
                    method: 'GET'
                });
                const data = await response.json();
                if (data.reply) {
                    addMessage(data.reply, false);
                }
            } catch (error) {
                console.error("Помилка ініціалізації:", error);
                addMessage("Добрий день! Мені потрібен шуруповерт. Що ви можете порадити?", false);
            } finally {
                hideTypingIndicator();
            }
        });
    </script>
</body>
</html>